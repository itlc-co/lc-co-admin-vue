###########################Scheduler Properties##############################
#   调度标识名 集群中每一个实例都必须使用相同的名称
org.quartz.scheduler.instanceName:DefaultQuartzScheduler
#   ID设置为自动获取 每一个必须不同
org.quartz.scheduler.instanceId:AUTO
###########################Configure ThreadPool##############################
#   线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）
org.quartz.threadPool.class:org.quartz.simpl.SimpleThreadPool
#   指定线程数，至少为1（无默认值）(一般设置为1-100直接的整数合适)
org.quartz.threadPool.threadCount:25
#   设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）
org.quartz.threadPool.threadPriority:5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true
###########################Configure JobStore##############################
# 信息保存时间 默认值60秒,misfire任务为错过调度触发时间的任务,超过60000ms后被判定为misfire
org.quartz.jobStore.misfireThreshold:60000
#数据保存方式为数据库持久化
org.quartz.jobStore.class:org.quartz.impl.jdbcjobstore.JobStoreTX
#   数据库代理类，一般org.quartz.impl.jdbcjobstore.StdJDBCDelegate可以满足大部分数据库
org.quartz.jobStore.driverDelegateClass:org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#   JobDataMaps是否都为String类型
org.quartz.jobStore.useProperties:false
#   数据库别名 随便取
org.quartz.jobStore.dataSource:quartz
#   表的前缀，默认QRTZ_
org.quartz.jobStore.tablePrefix:QRTZ_
#   是否加入集群
org.quartz.jobStore.isClustered:true
#   调度实例失效的检查时间间隔
org.quartz.jobStore.clusterCheckinInterval:20000
#   避免集群环境下job重复执行
org.quartz.jobStore.acquireTriggersWithinLock:true
