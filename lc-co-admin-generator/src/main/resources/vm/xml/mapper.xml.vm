<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.mapper.${ClassName}Mapper">

    <!--  ${functionName}结果集映射  -->
    <resultMap id="${className}ResultMap" type="${packageName}.entities.entity.${ClassName}">
#if($pkColumn)
    <id column="${pkColumn.columnName}" property="${pkColumn.javaField}" javaType="${pkColumn.javaType}"/>
#end
#foreach ($column in $columns)
    #if($column.columnName != $pkColumn.columnName)
        <result column="${column.columnName}" property="${column.javaField}" javaType="${column.javaType}"/>
    #end
#end
    </resultMap>

#set($boExcludeField=['id','createBy',"updateBy","createTime","updateTime","remark","orderNum","delFlag","status"])
    <!--  ${functionName}bo结果集映射  -->
    <resultMap id="${className}BoResultMap" type="${packageName}.entities.bo.${ClassName}Bo">
#if($pkColumn)
    <id column="${pkColumn.columnName}" property="${pkColumn.javaField}"  javaType="${pkColumn.javaType}"/>
#end
#foreach ($column in $columns)
    #if(!$boExcludeField.contains($column.columnName))
        <result column="${column.columnName}" property="${column.javaField}"  javaType="${column.javaType}"/>
    #end
#end
    </resultMap>

    <!--  查询${functionName}bo字段  -->
    <sql id="select${ClassName}Bo">
        SELECT
#foreach($column in $columns)
    #if(!$boExcludeColumn.contains($column.columnName))
        #if($foreach.count != $columns.size())
            $column.columnName,
        #else
            $column.columnName
        #end
    #end
#end
        FROM ${tableName}
    </sql>

    <!--  查询${functionName}字段  -->
    <sql id="select${ClassName}">
        SELECT
#foreach($column in $columns)
    #if($foreach.count != $columns.size())
            $column.columnName,
    #else
            $column.columnName
    #end
#end
        FROM ${tableName}
    </sql>

    <!--  根据请求参数查询${functionName}列表数据  -->
    <select id="select${ClassName}List" resultMap="${className}ResultMap" parameterType="${packageName}.entities.request.${ClassName}Request" >
        <include refid="select${ClassName}"/>
        <where>
            <trim prefixOverrides="AND">
#foreach($column in $columns)
#set($queryType=$column.queryType)
#set($javaField=$column.javaField)
#set($javaType=$column.javaType)
#set($columnName=$column.columnName)
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#if($column.query)
    #if($column.queryType == "EQ")
        <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
         AND $columnName = #{$javaField}
        </if>
    #elseif($queryType == "NE")
        <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
            AND $columnName != #{$javaField}
        </if>
    #elseif($queryType == "GT")
        <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
         AND $columnName &gt; #{$javaField}
        </if>
    #elseif($queryType == "GTE")
        <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
            AND $columnName &gt;= #{$javaField}
        </if>
    #elseif($queryType == "LT")
        <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
         AND $columnName &lt; #{$javaField}
        </if>
    #elseif($queryType == "LTE")
        <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
            AND $columnName &lt;= #{$javaField}
        </if>
    #elseif($queryType == "LIKE")
        <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
         AND $columnName LIKE CONCAT('%', #{$javaField}, '%')
        </if>
    #elseif($queryType == "BETWEEN")
        <if test=" params.begin$AttrName != null and params.begin$AttrName != '' and params.end$AttrName != null and params.end$AttrName != '' ">
         AND $columnName BETWEEN #{params.begin$AttrName} AND #{params.end$AttrName}
        </if>
    #end
        <if test=" params.startTime != null and params.startTime != '' ">
            <!-- 开始创建时间检索 -->
            AND DATE_FORMAT(create_time,'%y%m%d') &gt;= DATE_FORMAT(#{params.startTime},'%y%m%d')
        </if>
        <if test=" params.endTime != null and params.endTime != '' ">
            <!-- 开始创建时间检索 -->
            AND DATE_FORMAT(create_time,'%y%m%d') &lt;= DATE_FORMAT(#{params.endTime},'%y%m%d')
        </if>
#end
#end
            </trim>
        </where>
    </select>

    <!--  根据${functionName}主键查询${functionName}数据  -->
    <select id="select${ClassName}By${pkColumn.fieldAlias}" resultMap="${className}ResultMap" parameterType="${pkColumn.javaType}" >
#if($table.crud || $table.tree)
        <include refid="select${ClassName}"/>
        WHERE ${pkColumn.columnName} = #{${pkColumn.javaField}}
#end
    </select>

    <!--  根据请求参数查询${functionName}bo列表数据 -->
    <select id="select${ClassName}BoList" resultMap="${className}BoResultMap" parameterType="${packageName}.entities.request.${ClassName}Request" >
        <include refid="select${ClassName}Bo"/>
        <where>
            <trim prefixOverrides="AND">
#foreach($column in $columns)
#set($queryType=$column.queryType)
#set($javaField=$column.javaField)
#set($javaType=$column.javaType)
#set($columnName=$column.columnName)
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#if($column.query)
    #if($column.queryType == "EQ")
            <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
                AND $columnName = #{$javaField}
            </if>
        #elseif($queryType == "NE")
            <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
                AND $columnName != #{$javaField}
            </if>
        #elseif($queryType == "GT")
            <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
                AND $columnName &gt; #{$javaField}
            </if>
        #elseif($queryType == "GTE")
            <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
                AND $columnName &gt;= #{$javaField}
            </if>
        #elseif($queryType == "LT")
            <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
                AND $columnName &lt; #{$javaField}
            </if>
        #elseif($queryType == "LTE")
            <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
                AND $columnName &lt;= #{$javaField}
            </if>
        #elseif($queryType == "LIKE")
            <if test=" $javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end ">
                AND $columnName LIKE CONCAT('%', #{$javaField}, '%')
            </if>
        #elseif($queryType == "BETWEEN")
            <if test=" params.begin$AttrName != null and params.begin$AttrName != '' and params.end$AttrName != null and params.end$AttrName != '' ">
                AND $columnName BETWEEN #{params.begin$AttrName} AND #{params.end$AttrName}
            </if>
        #end
        <if test=" params.startTime != null and params.startTime != '' ">
            <!-- 开始创建时间检索 -->
            AND DATE_FORMAT(create_time,'%y%m%d') &gt;= DATE_FORMAT(#{params.startTime},'%y%m%d')
        </if>
        <if test=" params.endTime != null and params.endTime != '' ">
            <!-- 开始创建时间检索 -->
            AND DATE_FORMAT(create_time,'%y%m%d') &lt;= DATE_FORMAT(#{params.endTime},'%y%m%d')
        </if>
#end
#end
            </trim>
        </where>
    </select>

    <!--  根据${functionName}数据插入${functionName}数据  -->
    <insert id="insert${ClassName}" parameterType="${packageName}.entities.entity.${ClassName}" keyProperty="${pkColumn.javaField}"
            keyColumn="${pkColumn.columnName}" useGeneratedKeys="true">
        INSERT INTO ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
#foreach($column in $columns)
    #if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)
            <if test=" $column.javaField != null #if($column.javaType == 'String' && $column.required) and $column.javaField != '' #end ">$column.columnName,</if>
    #end
#end
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
#foreach($column in $columns)
    #if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)
            <if test=" $column.javaField != null #if($column.javaType == 'String' && $column.required) and $column.javaField != '' #end ">#{$column.javaField},</if>
    #end
#end
        </trim>
    </insert>

    <!--  根据${functionName}数据更新${functionName}数据  -->
    <update id="update${ClassName}" parameterType="${packageName}.entities.entity.${ClassName}">
        UPDATE ${tableName}
        <set>
            <trim suffixOverrides=",">
#foreach($column in $columns)
    #if($column.columnName != $pkColumn.columnName)
                <if test=" $column.javaField != null #if($column.javaType == 'String' && $column.required) and $column.javaField != '' #end ">$column.columnName = #{$column.javaField},</if>
    #end
#end
            </trim>
        </set>
        WHERE ${pkColumn.columnName} = #{${pkColumn.javaField}}
    </update>

    <!--  根据${functionName}主键列表删除${functionName}列表数据}  -->
    <delete id="delete${ClassName}By${pkColumn.fieldAlias}s">
        DELETE FROM ${tableName} WHERE ${pkColumn.columnName} IN
        <foreach item="${pkColumn.javaField}s" collection="${pkColumn.javaField}" open="(" separator="," close=")">
            #{${pkColumn.javaField}}
        </foreach>
    </delete>

    <!--  根据${functionName}主键删除${functionName}数据  -->
    <delete id="delete${ClassName}By${pkColumn.fieldAlias}">
        DELETE FROM ${tableName} WHERE ${pkColumn.columnName} = #{${pkColumn.javaField}}
    </delete>

</mapper>